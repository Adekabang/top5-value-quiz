// Represents the structure of scores, mapping value name to score
export type ValueScores = {
	[key: string]: number;
};

// Represents a single option in a Phase 1 question
export interface Phase1Option {
	text: string;
	value_area_hint: string[];
}

// Represents a Phase 1 question loaded from JSON
export interface Phase1Question {
	id: number;
	type: 'simple_choice';
	text: string;
	options: Phase1Option[];
}

// Represents an option in an AI-generated question (Phase 2)
export interface Phase2Option {
	text: string; // Could be the value name or a descriptive phrase
}

// Represents an AI-generated question (Phase 2)
export interface Phase2Question {
	id: string; // Unique ID generated by AI or backend
	type: 'forced_choice' | 'ranking';
	text: string;
	options: Phase2Option[];
	values_being_compared: string[]; // The actual values involved
}

// Union type for any question
export type QuizQuestion = Phase1Question | Phase2Question;

// Type for the state of the quiz
export type QuizPhase = 'start' | 'phase1' | 'phase2' | 'results' | 'loading' | 'error';

// Type for the request body sent to the AI API proxy
export interface GenerateQuestionRequest {
	scores: ValueScores;
	valuesList: string[];
	remainingQuestions: number;
	history?: Phase2Question[]; // Optional: Send history for better context
}

// Type for the response from the AI API proxy (which is the Phase2Question)
export type GenerateQuestionResponse = Phase2Question;
